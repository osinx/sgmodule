syntax = "proto3";
package youtube.response.player;
import "response/download.proto";

message Player {
  repeated AdPlacement adPlacements = 7;
  PlayabilityStatus playabilityStatus = 2;
  p1F4 p1F4 = 4;
  Captions captions = 10 [json_name = "captions"];
  DownloadConf downloadConf = 14;
}
message AdPlacement {
  AdPlacementRenderer adPlacementRenderer = 84813246;
}
message AdPlacementRenderer {
  string params = 4;
}
message PlayabilityStatus{
  int32 p2F1 = 1; // premium: 0
  string p2F2 = 2;
  p2F10 p2F10 = 10;
  PIPAbility pipAbility = 21;
  BackgroundAbility backgroundAbility = 11;
}
message PIPAbility{
  PIPlayer piplayer = 151635310;
}
message  BackgroundAbility{
  BackgroundPlayer backgroundPlayer = 64657230;
}
message PIPlayer{
  bool active = 1;
}
message BackgroundPlayer{
  bool active = 1;
}
message Captions {
  PlayerCaptionsTracklistRenderer playerCaptionsTracklistRenderer = 51621377 [json_name = "playerCaptionsTracklistRenderer"];
};
message PlayerCaptionsTracklistRenderer {
  repeated CaptionTracks captionTracks = 1 [json_name = "captionTracks"];
  repeated AudioTracks audioTracks = 2 [json_name = "audioTracks"];
  repeated TranslationLanguage translationLanguages = 3 [json_name = "translationLanguages"];
  optional int32 defaultAudioTrackIndex = 4 [json_name = "defaultAudioTrackIndex"];
  optional int32 defaultCaptionTrackIndex = 6 [json_name = "defaultCaptionTrackIndex"];
};
message CaptionTracks {
  string baseUrl = 1 [json_name = "baseUrl"];
  Name name = 2 [json_name = "name"];
  string vssId = 3 [json_name = "vssId"];
  string languageCode = 4 [json_name = "languageCode"];
  optional string kind = 5 [json_name = "kind"];
  optional bool rtl = 6 [json_name = "rtl"];
  bool isTranslatable = 7 [json_name = "isTranslatable"];
};

message AudioTracks {
  repeated int32 captionTrackIndices = 2 [json_name = "captionTrackIndices", packed = false];
  optional int32 defaultCaptionTrackIndex = 3 [json_name = "defaultCaptionTrackIndex"];
  optional int32 forcedCaptionTrackIndex = 4 [json_name = "forcedCaptionTrackIndex"];
  optional int32 visibility = 5 [json_name = "visibility"];
  optional bool hasDefaultTrack = 6 [json_name = "hasDefaultTrack"];
  optional bool hasForcedTrack = 7 [json_name = "hasForcedTrack"];
  optional string audioTrackId = 8 [json_name = "audioTrackId"];
  optional int32 captionsInitialState = 11 [json_name = "captionsInitialState"];
};

message TranslationLanguage {
  string languageCode = 1 [json_name = "languageCode"];
  Name languageName = 2 [json_name = "languageName"];
};

message Name {
  repeated Runs runs = 1 [json_name = "runs"];
  message Runs {
    string text = 1 [json_name = "text"];
  };
};

message p1F4{
  repeated p4F3 p4F3 = 3;
}
message p4F3{
  string stream = 2;
  string codecs = 5;
  uint32 w = 7;
  uint32 h = 8;
}

message DownloadConf{
  string f1 = 1;
  uint32 f2 = 2;
  uint32 f3 = 3;
  uint32 f5 = 5;
}

message p2F10{
  youtube.response.download.n60572968 pn60572968 = 60572968;
}
message pn60572968{
  int32 f1 = 1;
  repeated videoInfo videoInfo = 3;
  // da2F2 f4 = 4;
}
message videoInfo{
  int32 f3 = 3;
  int32 f4 = 4;
  int32 f5 = 5;
}